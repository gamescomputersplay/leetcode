''' https://leetcode.com/problems/sort-integers-by-the-number-of-1-bits/
'''

class Solution:
    def sortByBits(self, arr):

        def count_bits(num):
            if num in cache:
                return cache[num]
            bits = 0
            num_orig = num
            while num > 0:
                bits += num % 2
                num //= 2
            cache[num_orig] = bits
            return bits

        cache = {}
        result = sorted(arr, key=lambda x: (count_bits(x), x))
        return result

def main():
    ''' Test sortByBits
    '''
    solution = Solution()

    test_cases = [
        [0,1,2,3,4,5,6,7,8],
        [1024,512,256,128,64,32,16,8,4,2,1],
        [0],
        [853,6159,6244,6839,6246,4347,9584,2403,7870,3862,5080,9756,9634,1097,1057,6355,2933,6037,2920,4713,2549,6349,2072,4338,9171,8711,5438,6649,7527,7294,6376,2227,6983,5228,1970,2214,4506,5130,3568,635,1572,7228,4639,6247,3025,8912,5542,8323,5446,40,811,2570,6222,8869,3555,3812,4761,2793,69,4940,7473,3647,5742,6041,8385,1457,1844,8333,4176,1470,3455,8140,7527,3717,8082,1021,736,147,4988,6347,8416,5612,2722,3615,8735,7027,1779,1295,3242,6877,4508,7337,8755,8149,6613,5625,6181,1323,5493,559,6878,3444,2363,1000,9208,3199,2813,9666,750,5625,724,3019,2829,1192,3293,1730,4198,2838,528,261,8709,7942,2427,52,6439,2933,6841,5533,4637,6799,4776,2077,2758,3828,2865,9559,8492,9556,3861,5987,5172,3848,6468,9161,6834,1911,1041,5044,3933,422,8599,6359,5109,1740,2876,2595,9603,7623,1153,6915,9543,5615,3384,8257,4069,8430,6902,4904,9874,6253,9352,2021,5307,5599,1668,5158,6537,6271,8007,2830,2078,1875,2935,6123,2542,525,1338,1251,7767,9154,1881,9697,3398,4932,1502,4682,6299,5874,7603,9967,8733,6766,6242,2718,7915,8477,2609,9700,792,4197,4607,7570,7684,5273,1081,3337,4594,8290,7939,8159,51,9446,5230,4126,9282,7246,6901,4918,6459,3470,2905,1417,1200,8294,6424,4292,4383,1725,6523,5662,3064,1797,321,3022,7442,1193,6998,6825,2546,1122,784,9223,1040,2916,2899,9732,3432,6097,4869,4762,7575,5345,1885,5574,7745,5018,3479,3255,4142,8550,8828,8329,9317,5671,7987,6761,5504,2488,8223,2183,4747,2625,1234,5224,3545,2004,2848,1537,4451,4656,8867,6903,2869,688,6901,2385,7750,4920,7908,4119,3490,8468,2549,5748,1835,7416,956,5782,1591,6178,2998,1310,2432,8853,155,2470,2642,8551,5716,1161,8737,6411,4630,761,5967,2579,50,8228,0,5275,4935,8373,4276,6805,9462,8659,9757,114,8738,2959,5715,444,7163,8156,451,3627,2400,2770,9395,2172,4187,7946,6349,937,2806,7546,7329,6847,486,1504,5499,5581,3714,5059,7334,9328,5040,744,3977,7384,4533,1792,930,8620,9199,9924,6071,4123,7649,3808,280,5932,2539,8125,1005,201,3834,6939,9417,5360,2981,1864,7638,9275,4490,2868,6560,4126,8753,810,1970,391,7429,1236,5862,7893,2289,4804,5333,8131,9119,3598,4327,1387,8332,895,8725,9853,5455,897,7923,236,9464,2648,8002,2552,1691,711,5150,265,4893,9743,3666,9048,4865,1907,6548,326,7945,8124,7543,8939,8563],
        [40, 528, 1040, 0, 50, 52, 69, 261],
    ]
    for n in test_cases:
        result = solution.sortByBits(n)
        print(n, result)


if __name__ == "__main__":
    main()
        